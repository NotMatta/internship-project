generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Role {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  users User[]
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name  String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  roleId String @map("_roleId") @db.ObjectId @default("67877aff355d2387331e1987")
  role Role @relation(fields: [roleId], references: [id])
  applications Application[]
  logs Log[]
}

enum adressType {
  URL
  IP
}

model Application {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  logo String @default("https://cdn.icon-icons.com/icons2/2483/PNG/512/application_icon_149973.png")
  type adressType
  address String
  login String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  userId String @map("_userId") @db.ObjectId
  user  User   @relation(fields: [userId], references: [id])
}

enum ActionType {
  LOGIN
  LOGOUT
  CREATE
  UPDATE
  DELETE
}

model Log {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  message String
  action ActionType
  date DateTime
  userId String @map("_userId") @db.ObjectId
  user  User   @relation(fields: [userId], references: [id])
}
